{% set version = "0.3.14" %}

package:
  name: py-spy
  version: {{ version }}

source:
  url: https://github.com/benfred/py-spy/archive/v{{ version }}.tar.gz
  sha256: c01da8b74be0daba79781cfc125ffcd3df3a0d090157fe0081c71da2f6057905

build:
  number: 0
  # this is producing multiple outputs, one of which is failing.
  skip: true  # [win and (rust_compiler == 'rust-gnu')]
  skip: true  # [s390x]
  # Builds on Linux need a newer glibc: https://github.com/conda-forge/conda-forge.github.io/issues/900
  missing_dso_whitelist:   # [osx]
    - /usr/lib/libresolv.9.dylib  # [osx]

requirements:
  build:
    - sysroot_linux-64 2.17  # [linux64]
    - {{ compiler('c') }}
    - {{ compiler('rust') }}
  host:
    - libunwind  # [linux and x86_64]
  run:
    - libunwind  # [linux and x86_64]

test:
  requires:
    - pip
  commands:
    - pip check
    - py-spy --help

about:
  home: https://github.com/benfred/py-spy
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Sampling profiler for Python programs
  description: |
    py-spy is a sampling profiler for Python programs. 
    It lets you visualize what your Python program is spending time on 
    without restarting the program or modifying the code in any way. 
    py-spy is extremely low overhead: it is written in Rust for speed 
    and doesn't run in the same process as the profiled Python program. 
    This means py-spy is safe to use against production Python code.
  dev_url: https://github.com/benfred/py-spy
  doc_url: https://github.com/benfred/py-spy

extra:
  recipe-maintainers:
    - xhochy
